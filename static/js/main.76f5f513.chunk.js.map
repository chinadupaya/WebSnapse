{"version":3,"sources":["components/stylesheet.js","components/Snapse/useAnimateEdges.js","utils/helpers.js","components/Snapse/Snapse.js","utils/automata.js","components/forms/ChooseRuleForm.js","components/forms/NewNodeForm.js","components/forms/NewOutputNodeForm.js","components/forms/EditNodeForm.js","components/forms/DeleteNodeForm.js","components/ChoiceHistory/ChoiceHistory.js","components/useUnsavedChanges/useUnsavedChanges.js","components/Tour/Tour.js","App.js","reportWebVitals.js","index.js"],"names":["styles","selector","style","color","content","events","height","shape","width","useAnimateEdges","cyRef","useRef","useEffect","raf","cy","current","animOffset","animate","edges","requestAnimationFrame","cancelAnimationFrame","internal","createNeuron","newId","x","y","rules","spike","time","data","id","label","includes","substr","indexOf","position","classes","parent","replace","createOutputNeuron","output","rootId","checkValidRule","rule","result","exec","console","log","createEdge","src","dst","c","source","target","allRulesValid","splitRules","split","count","i","length","Snapse","neurons","onEdgeCreate","handleChangePosition","headless","setCy","elements","array","nodes","k","element","currentRule","newNodes","spikes","delay","push","isOutput","newOutputNode","bitstring","out","newEdge","newEdges","convertElements","on","evt","gridGuide","guidelinesStyle","strokeStyle","horizontalDistColor","verticalDistColor","initPosAlignmentColor","edgehandles","handleNodes","preview","loopAllowed","edgeType","sourceNode","targetNode","complete","Button","className","variant","onClick","center","fit","zoom","level","CytoscapeComponent","normalizeElements","stylesheet","parseRule","testRes","forgetRes","requires","grouped","symbol","consumes","produces","delayStr","parseInt","canUseRule","step","isRandom","handleStartGuidedMode","handleSimulationEnd","newStates","produce","draft","spikeAdds","outputTracker","neuronValidRules","shouldEnd","neuron","chosenRule","validRules","randomIndex","Math","floor","random","Object","keys","newDelay","valueOf","newSpikes","neuronOutKeys","newString","localStorage","setItem","JSON","stringify","backStep","parse","getItem","ChooseRuleForm","showChooseRuleModal","handleCloseChooseRuleModal","handleChosenRules","useImmer","values","setValues","handleSelectChange","event","neuronId","currentValues","value","GroupRules","options","neuronOptions","map","Form","Group","Label","Control","as","onChange","ruleList","form","Modal","show","onHide","backdrop","keyboard","Header","Title","Body","onSubmit","e","preventDefault","type","formReducer","state","reset","startingSpikes","name","initialFormState","NewNodeForm","showNewNodeModal","handleCloseModal","handleNewNode","handleError","handleClose","useReducer","formData","setFormData","useState","setSubmitting","handleChange","closeButton","shortid","generate","setTimeout","newNeuron","data-testid","htmlFor","required","placeholder","Text","min","NewOutputNodeForm","showNewOutputModal","handleCloseNewOutputModal","handleNewOutput","EditNodeForm","showEditModal","handleCloseEditModal","handleEditNode","setNeuronId","setRules","setStartingSpikes","reduce","r","filteredObject","defaultValue","disabled","DeleteNodeForm","showDeleteModal","handleCloseDeleteModal","handleDeleteNode","defaultNeuron","TableCell","TableRow","ChoiceHistory","showChoiceHistoryModal","handleCloseHoiceHistoryModal","getLatestState","neuronIds","neuronRows","neuronCells","size","Table","striped","bordered","hover","useUnsavedChanges","isDirty","setDirty","message","window","onbeforeunload","when","TOUR_STEPS","title","placement","disableBeacon","disableOverlayClose","floaterProps","disableAnimation","offset","INITIAL_STATE","key","Date","run","continuous","loading","stepIndex","steps","reducer","action","payload","beaconInner","backgroundColor","tooltip","textColor","fontSize","tooltipContainer","textAlign","tooltipTitle","margin","buttonNext","buttonBack","buttonSkip","overlay","mixBlendMode","spotlightLegacy","boxShadow","floater","arrow","zIndex","Tour","handleShowDropdownBasic","handleCloseDropdownBasic","handleShowSideBarMenu","handleCloseSideBarMenu","restartTutorial","handleFalseRestartTutorial","tourState","dispatch","callback","index","status","ACTIONS","CLOSE","STATUS","SKIPPED","FINISHED","EVENTS","STEP_AFTER","TARGET_NOT_FOUND","PREV","scrollToFirstStep","showSkipButton","hideBackButton","showProgress","locale","last","skip","compact","ignoreComment","spaces","sanitize","useKey","cb","isFocus","callbackRef","inputs","document","getElementsByTagName","input","addEventListener","handleKeyDown","code","fn","timerId","args","clearTimeout","debounced","removeEventListener","shortening","keyframes","ProgressBar","styled","div","props","isPlaying","css","App","n1","n2","n3","n4","setNeurons","setTime","setIsRandom","fileName","setFileName","Prompt","setPristine","setShowNewNodeModal","setShowNewOutputModal","setShowChooseRuleModal","setShowEditModal","setShowChoiceHistoryModal","setShowDeleteModal","showDropdownBasic","setShowDropdownBasic","showSideBarMenu","setShowSideBarMenu","setIsPlaying","hasEnded","setHasEnded","error","setError","pBar","setPBar","setRestartTutorial","alert","showError","text","a","outCopy","handleNewPosition","newOutput","arr","filter","item","handleReset","tempNeurons","clear","guidedRules","setGuidedRules","onForward","onBackward","tempTime","onIntervalStepRef","p","interval","setInterval","clearInterval","path","Container","Alert","isOpen","disableCloseOnEsc","disableOverlayClick","noOverlay","File","custom","file","files","reader","FileReader","removeJsonTextAttribute","parentElement","pOpKeys","_parent","keyNo","keyName","arrOfKey","arrIndex","nativeType","trim","ignoreDeclaration","ignoreInstruction","ignoreAttributes","ignoreCdata","ignoreDoctype","textFn","convert","xml2js","readAsText","nValue","Number","isNaN","bValue","toLowerCase","handleLoad","wrapper","json2xml","blob","Blob","saveAs","toString","DropdownButton","Dropdown","Item","href","download","fontWeight","Row","Col","sm","Check","defaultChecked","OverlayTrigger","hide","Tooltip","borderRadius","padding","marginBottom","display","Toggle","Menu","addedEles","remove","process","j","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","cytoscape","use","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.76f5f513.chunk.js","sourcesContent":["const styles = [\n    {\n        selector: '.snapse-node, .snapse-output',\n        style: {\n            'font-family': 'Computer Modern',\n            'background-opacity': '0',\n            'padding-top': '0',\n            'border-width': 0,\n            'text-halign': 'left',\n            'text-valign': 'top',\n            color: 'black',\n            content: 'data(label)'\n        }\n    },\n    {\n        selector: '.snapse-node__closed',\n        style: {\n            'font-family': 'Computer Modern',\n            'background-opacity': '0',\n            'padding-top': '0',\n            'border-width': 0,\n            'text-halign': 'left',\n            'text-valign': 'top',\n            'background-color':'gray',\n            color: 'black',\n            content: 'data(label)'\n        }\n    },\n    {\n        selector: '.snapse-node__rules, .snapse-node__output',\n        style: {\n            'font-family': 'Computer Modern',\n            'font-style':'italic',\n            'background-color': 'white',\n            'border-width': 1,\n            events: 'no',\n            'text-wrap': 'wrap',\n            'text-halign': 'center',\n            'text-valign': 'center',\n            'text-wrap':'wrap',\n            content: 'data(label)',\n            height: 150,\n            shape: 'roundrectangle',\n            width: 100\n        }\n    },\n    {\n        selector: '.snapse-node__rules__closed',\n        style: {\n            'font-family': 'Computer Modern',\n            'font-style':'italic',\n            'background-color': 'gray',\n            'border-width': 3,\n            events: 'no',\n            'text-wrap': 'wrap',\n            'text-halign': 'center',\n            'text-valign': 'center',\n            'text-wrap':'wrap',\n            content: 'data(label)',\n            height: 150,\n            shape: 'roundrectangle',\n            width: 100\n        }\n    },\n    {\n        selector: '.snapse-node__time, .snapse-node__spike',\n        style: {\n            'font-family': 'Computer Modern',\n            'background-opacity': '0',\n            'text-halign': 'center',\n            'text-valign': 'center',\n            content: 'data(label)',\n            events: 'no',\n            height: 15,\n            shape: 'roundrectangle',\n            width: 50\n        }\n    },\n    {\n        selector: '.snapse-node__time__closed, .snapse-node__spike__closed',\n        style: {\n            'font-family': 'Computer Modern',\n            'background-opacity': '0',\n            'text-halign': 'center',\n            'text-valign': 'center',\n            content: 'data(label)',\n            events: 'no',\n            height: 15,\n            shape: 'roundrectangle',\n            width: 50\n        }\n    },\n    /*     {\n            selector: 'node',\n            style: {\n                'background-opacity': '0',\n                'padding-top': '0',\n                'text-halign': 'left',\n                'text-valign': 'top',\n                color: 'black',\n                content: 'data(label)',\n                'border-width': 1,\n                events: 'no',\n                'text-wrap': 'wrap',\n                shape: 'roundrectangle'\n            }\n        }, */\n    {\n        selector: 'edge',\n        style: {\n            'font-family': 'Computer Modern',\n            'curve-style': 'bezier',\n            'target-arrow-shape': 'triangle',\n            'text-background-color': 'white',\n            'text-background-shape': 'rectangle',\n            width: 1\n        }\n    },\n    {\n        selector: '.edge--triggering',\n        style: {\n          'line-color': 'magenta',\n          'line-style': 'dashed',\n          'target-arrow-color': 'magenta',\n          'line-color': 'magenta',\n          'line-style': 'dashed',\n          'target-arrow-color': 'magenta',\n          'width': 4,\n          'line-dash-offset': 3,\n          'line-dash-pattern': [15,3],\n          'arrow-scale': 1.5\n        }\n    },\n]\nexport default styles;\n","import { useEffect, useRef } from 'react'\nimport cytoscapejs from 'cytoscape'\n\nfunction useAnimateEdges() {\n  const cyRef = useRef(null)\n  const setCy = (internal) => {\n    cyRef.current = internal\n  }\n\n  useEffect(() => {\n    const cy = cyRef.current\n    let raf\n    let animOffset = 0\n\n    function animate() {\n      animOffset++\n      if (cy) {\n        cy.edges().animate({\n          style: { 'line-dash-offset': -animOffset }\n        })\n      }\n      raf = requestAnimationFrame(animate)\n    }\n\n    animate()\n\n    return () => {\n      if (raf) {\n        cancelAnimationFrame(raf)\n      }\n    }\n  }, [])\n\n  return [cyRef, setCy]\n}\n\nexport default useAnimateEdges\n","export const createNeuron = (newId, x,\n    y,\n    rules,\n    spike,\n    time) => [{\n        data: {\n            id: newId,\n            label: `${(newId.includes('-'))? newId.substr(0, newId.indexOf('-')) : newId}`\n        },\n        position: { x: x, y: y },\n        classes: 'snapse-node'\n    },\n    {\n        data: {\n            id: newId + '-rules',\n            parent:newId,\n            label: rules.replace(/ /g, \"\\n\").replace(/->/g, \"→\")\n        },\n        position: { x: x, y: y },\n        classes: 'snapse-node__rules'\n    },\n    {\n        data: {\n            id: newId + '-spike',\n            parent: newId,\n            label: spike\n        },\n        position: { x: x, y: y - 60 },\n        classes: 'snapse-node__spike'\n    },\n    {\n        data: {\n            id: newId + '-time',\n            parent: newId,\n            label: `${(time < 0)? '!': time}`\n        },\n        position: { x: x, y: y + 90 },\n        classes: 'snapse-node__time'\n    }];\n\nexport const createClosedNeuron = (newId, x,\n        y,\n        rules,\n        spike,\n        time) => [{\n            data: {\n                id: newId,\n                label: `${(newId.includes('-'))? newId.substr(0, newId.indexOf('-')) : newId}`\n            },\n            position: { x: x, y: y },\n            classes: 'snapse-node__closed'\n        },\n        {\n            data: {\n                id: newId + '-rules',\n                parent:newId,\n                label: rules.replace(/ /g, \"\\n\").replace(/->/g, \"→\")\n            },\n            position: { x: x, y: y },\n            classes: 'snapse-node__rules__closed'\n        },\n        {\n            data: {\n                id: newId + '-spike',\n                parent: newId,\n                label: spike\n            },\n            position: { x: x, y: y - 60 },\n            classes: 'snapse-node__spike__closed'\n        },\n        {\n            data: {\n                id: newId + '-time',\n                parent: newId,\n                label: time\n            },\n            position: { x: x, y: y + 90 },\n            classes: 'snapse-node__time__closed'\n        }];\nexport const createOutputNeuron = (id,x,y,output,spike) => [\n    {\n        data: { rootId: id, id: `${id}`, label: `${(id.includes('-'))? id.substr(0, id.indexOf('-')) : id}`},\n        classes: 'snapse-output',\n        position: { x: 0, y: 0 }\n      },\n      {\n        data: { rootId: id, id: `${id}-output`, parent: id, label: `${(typeof output === 'string') ? output.replace(/\\[object Object\\]/g,'') : ''}`},\n        classes: 'snapse-node__output',\n        position: { x, y: y }\n      },\n      {\n        data: { rootId: id, id: `${id}-spike`, parent: id, label: spike },\n        classes: 'snapse-node__spike',\n        position: { x, y: y + 40 }\n      }\n]\nexport const checkValidRule = (rule) =>{\n    const re = /(a+)(\\+*\\**)\\/(a+)->(a+);([0-9]+)/\n    const testRe = /(a+)(\\(*a*\\)*)(\\+*\\**)\\/(a+)->(a+);([0-9]+)/\n    const forgetRe=/(a+)(\\+*\\**)\\/(a+)->(0);(0)/\n    var result = testRe.exec(rule) || forgetRe.exec(rule);\n    console.log(result);    \n    return result;\n}\n\nexport const createEdge = (src,dst,c) =>{\n    return {\n        data: {\n          id: src + '-' + dst,\n          source: src,\n          target: dst\n        },\n        classes: c\n      };\n}\n\nexport const allRulesValid = (rules) => {\n    var splitRules = rules.split(\" \");\n    var count = 0;\n    for (var i=0;i<splitRules.length;i++){\n        if(checkValidRule(splitRules[i])!=null){\n            count+=1;\n        }else{\n            console.log(\"invalidRule\", splitRules[i])\n        }\n    }\n    if(count == splitRules.length){\n        return 1;\n    }else{\n        return 0;\n    }\n}\n\nexport const convertElements = elements =>{\n    var array = {\n        nodes: [],\n        edges:[],\n    }\n    for (var k in elements) {\n        var element = elements[k];\n        if (element.currentRule){\n            var newNodes = createClosedNeuron(element.id, element.position.x, element.position.y,element.rules, element.spikes, element.delay);\n            array.nodes.push(newNodes[0])\n            array.nodes.push(newNodes[1])\n            array.nodes.push(newNodes[2])\n            array.nodes.push(newNodes[3])\n        }else if(!element.isOutput){\n            var newNodes = createNeuron(element.id, element.position.x,element.position.y,element.rules, element.spikes, element.delay);\n            array.nodes.push(newNodes[0])\n            array.nodes.push(newNodes[1])\n            array.nodes.push(newNodes[2])\n            array.nodes.push(newNodes[3])\n            \n        }else{\n            var newOutputNode = createOutputNeuron(element.id, element.position.x,element.position.y, element.bitstring, 0);\n            array.nodes.push(newOutputNode[0])\n            array.nodes.push(newOutputNode[1])\n            array.nodes.push(newOutputNode[2])\n        } \n        if(element.out){\n            for (var i=0; i< element.out.length; i++){\n                if (element.delay<0) {\n                    console.log(element.delay)\n                    for (let out of element.out) {\n                      var newEdge = createEdge(element.id, element.out[i],' edge--triggering');\n                      array.edges.push(newEdge);\n                    }\n                }else{\n                    var newEdges = createEdge(element.id, element.out[i],'');\n                    array.edges.push(newEdges);\n                }\n            }\n        }\n    }\n    return array;\n}\n","\nimport CytoscapeComponent from 'react-cytoscapejs';\nimport stylesheet from '../stylesheet'\nimport { Button, Container } from 'react-bootstrap';\nimport useAnimateEdges from './useAnimateEdges';\nimport { useEffect, useMemo } from 'react';\nimport { convertElements } from '../../utils/helpers';\nimport { AlignCenter } from 'react-bootstrap-icons';\n\nconst Snapse = ({ neurons, onEdgeCreate, handleChangePosition, headless }) => {\n  const [cyRef, setCy] = useAnimateEdges()\n  function handleCenterGraph() {\n    const cy = cyRef.current;\n    if (cy) {\n      cy.center();\n      cy.fit();\n      cy.zoom({\n        level: 0.8,\n        position: { x: 100, y: 100 }\n      });\n    }\n  }\n  const elements = convertElements(neurons);\n  useEffect(() => {\n    if (!headless) {\n      const cy = cyRef.current\n      if (cy) {\n        cy.on('mouseup', '.snapse-node, .snapse-output', (evt) => {\n          console.log(\"change position\", evt.target.id())\n          handleChangePosition(evt.position, evt.target.id());\n        })\n        cy.gridGuide({\n          guidelinesStyle: {\n            strokeStyle: \"black\",\n            horizontalDistColor: \"#ff0000\",\n            verticalDistColor: \"green\",\n            initPosAlignmentColor: \"#0000ff\",\n          }\n        });\n        cy.edgehandles({\n          handleNodes: '.snapse-node, .snapse-node__closed',\n          preview: false,\n          loopAllowed: () => false,\n          edgeType: function (sourceNode, targetNode) {\n            return 'flat'\n            //return sourceNode.edgesTo(targetNode).empty() ? 'flat' : undefined\n          },\n          complete: onEdgeCreate\n        });\n      }\n    }\n    \n  }, [cyRef, headless]);\n  return headless ? (<div id=\"cyHeadless\"></div>) : (\n    <div style={{\n      width: \"100%\",\n      height: \"100%\"\n    }}>\n      <Button className=\"center-graph-button\" variant=\"secondary\" onClick={handleCenterGraph}><AlignCenter />{' '}Center Graph</Button>\n      <CytoscapeComponent\n        cy={setCy}\n        elements={CytoscapeComponent.normalizeElements(elements)}\n        style={{\n          width: \"100%\",\n          height: \"100%\"\n        }}\n        stylesheet={stylesheet} />\n    </div>\n  )\n};\n\nexport default Snapse;","import produce from 'immer'\nexport function parseRule(rule) {\n    const re = /(a+)(\\+*\\**)\\/(a+)->(a+);([0-9]+)/\n    const forgetRe = /(a+)(\\(*a*\\)*)(\\+*\\**)\\/(a+)->(0);(0)/\n    const testRe = /(a+)(\\(*a*\\)*)(\\+*\\**)\\/(a+)->(a+);([0-9]+)/\n    const res = re.exec(rule)\n    const testRes = testRe.exec(rule);\n    const forgetRes = forgetRe.exec(rule);\n\n    /* if (res) {\n      const [, requires, symbol, consumes, produces, delayStr] = res\n      const delay = parseInt(delayStr, 10)\n      return[requires.length, symbol, consumes.length, produces.length, delay];\n    } */\n    if (testRes) {\n        //console.log(testRes);\n        const [, requires, grouped, symbol, consumes, produces, delayStr] = testRes\n        const delay = parseInt(delayStr, 10)\n        return [requires.length, grouped.length - 2, symbol, consumes.length, produces.length, delay];\n    } else if (forgetRes) {\n        const [, requires, grouped, symbol, consumes, produces, delayStr] = forgetRes;\n        return [requires.length, grouped.length - 2, symbol, consumes.length, 0, 0];\n    }\n\n\n    return false\n}\nexport function canUseRule(requires, grouped, symbol, spikes) {\n    if (symbol == '+') {\n        if (grouped > 0) {\n            if ((spikes - requires) % grouped == 0 && (spikes - requires) >= grouped) {\n                return true;\n            }\n            return false;\n        }\n        if (spikes >= requires) {\n            return true\n        }\n    }\n    else if (symbol == '*') {\n        if (grouped > 0) {\n            if ((spikes - requires) % grouped == 0) {\n                return true;\n            }\n            return false;\n        }\n        if (spikes >= requires - 1) {\n            return true\n        }\n    }\n    else if (spikes == requires) {\n        return true;\n    }\n    return false;\n}\nexport function step(neurons, time, isRandom, handleStartGuidedMode, handleSimulationEnd) {\n    const newStates = produce(neurons, draft => {\n        const spikeAdds = {}\n        const outputTracker = [];\n        var neuronValidRules = {};\n        var shouldEnd = true;\n\n        for (var k in draft) {\n            var neuron = draft[k];\n            //choose rule to follow if not working on a rule currently\n            if (!neuron.currentRule && !neuron.isOutput) {\n                delete draft[neuron.id].chosenRule;\n                delete draft[neuron.id].currentRule;\n                //pick a rule\n                var rules = neuron.rules.split(' ');\n                var validRules = [];\n                for (var i = 0; i < rules.length; i++) {\n                    var [requires, grouped, symbol, consumes, produces, delay] = parseRule(rules[i]);\n                    if (canUseRule(requires, grouped, symbol, neuron.spikes)) {\n                        validRules.push(rules[i]);\n                        shouldEnd = false;\n                    }\n                }\n                if (validRules.length == 1) {\n                    draft[neuron.id].currentRule = validRules[0];\n                    draft[neuron.id].chosenRule = validRules[0];\n                    var [requires, grouped, symbol, consumes, produces, delay] = parseRule(validRules[0]);\n                    draft[neuron.id].delay = delay\n                } else if (isRandom == true && validRules.length > 1) {\n                    var randomIndex = Math.floor(Math.random() * (validRules.length))\n                    var [requires, grouped, symbol, consumes, produces, delay] = parseRule(validRules[randomIndex]);\n                    draft[neuron.id].currentRule = validRules[randomIndex];\n                    draft[neuron.id].chosenRule = validRules[randomIndex];\n                    draft[neuron.id].delay = delay\n                } else if (isRandom == false && validRules.length > 1) {\n                    neuronValidRules[neuron.id] = validRules;\n                }\n\n            }\n        }\n        if (Object.keys(neuronValidRules).length > 0) {\n            //console.log(neuronValidRules);\n            handleStartGuidedMode(neuronValidRules);\n            return;\n        }\n        for (var k in draft) {\n            var neuron = draft[k];\n            //work on the rule\n            if (neuron.currentRule) {\n                shouldEnd = false;\n                if (neuron.delay >= 0) {\n                    let newDelay = neuron.delay.valueOf();\n                    newDelay--;\n                    draft[neuron.id].delay = newDelay;\n                }\n                console.log(neuron.delay)\n                if (neuron.delay < 0) {\n                    //consume spikes\n                    var [requires, grouped, symbol, consumes, produces, delay] = parseRule(neuron.currentRule);\n                    let newSpikes = neuron.spikes.valueOf();\n                    newSpikes -= consumes;\n                    draft[neuron.id].spikes = newSpikes;\n                    //send spikes\n                    if (neuron.out) {\n                        const neuronOutKeys = neuron.out;\n                        for (let k of neuronOutKeys) {\n                            spikeAdds[k] =\n                                k in spikeAdds ? spikeAdds[k] + produces : produces\n                        }\n                    }\n\n                    //resolve rule\n                    delete draft[neuron.id].currentRule;\n                }\n            } else if (neuron.isOutput) {\n                outputTracker.push(neuron.id);\n                if (!(k in spikeAdds)) {\n                    spikeAdds[k] = 0\n                }\n            } else if (neuron.delay == -1) {\n                draft[neuron.id].delay = 0;\n            }\n        }\n        for (const k in spikeAdds) {\n            //states[k].spikes -= spikeAdds[k]\n            let newSpikes = draft[k].spikes.valueOf();\n            newSpikes += spikeAdds[k];\n            draft[k].spikes = newSpikes;\n            if (draft[k].isOutput) {\n                var newString = `${draft[k].bitstring}${(spikeAdds[k] || '0')}`\n                draft[k].bitstring = newString;\n            }\n        }\n        //console.log(\"should end\", shouldEnd);\n        if (shouldEnd) {\n            handleSimulationEnd();\n        }\n\n    })\n    localStorage.setItem(time + 'sec', JSON.stringify(newStates));\n    return newStates;\n\n}\n\nexport function backStep(time) {\n    console.log(\"back step automata\");\n    var oldState = JSON.parse(localStorage.getItem(time + 'sec'));\n    return oldState;\n\n}\nexport function initialize(neurons) {\n    const states = {}\n    for (const k in neurons) {\n        const neuron = neurons[k]\n        states[k] = initializeState(neuron)\n    }\n    return states\n}\nexport function initializeState(neuron) {\n    return {\n        spikes: neuron.spikes,\n        delay: 0\n    }\n}","import { useEffect, useState } from 'react';\nimport { Button, Form, Modal } from 'react-bootstrap';\nimport { useImmer } from 'use-immer';\n\nconst ChooseRuleForm = ({showChooseRuleModal, handleCloseChooseRuleModal,rules, handleChosenRules}) => {\n    const [values, setValues] = useImmer({});\n    useEffect(()=>{\n        setValues(currentValues =>{\n            for (var k in rules){\n                currentValues[k] = rules[k][0];\n            }\n        })\n    },[rules])\n    function onSubmit(e){\n        e.preventDefault();\n        handleChosenRules(values);\n    }\n    function handleSelectChange(event,neuronId){\n        setValues(currentValues =>{\n            for (var k in currentValues){\n                if(k == neuronId){\n                    currentValues[k] = event.target.value;\n                }\n              \n            }\n        })\n    }\n    const GroupRules = (label,options) =>{\n        let neuronOptions = options.map((neuron)=>(\n            <option value={neuron} key={neuron}>{neuron}</option>)\n        )   \n        return(\n            <Form.Group>\n                <Form.Label>{label}</Form.Label>\n                <Form.Control as=\"select\" value={values[label]} onChange={(event)=>handleSelectChange(event, label)}>\n                    {neuronOptions}\n                </Form.Control>\n            </Form.Group>\n            \n        )\n    }\n    var ruleList = Object.keys(rules);\n    var form = [];\n    for (var i=0; i<ruleList.length; i++){\n        console.log(i);\n        form.push(GroupRules(ruleList[i], rules[ruleList[i]], handleSelectChange));\n    }\n    return (\n        <Modal show={showChooseRuleModal} onHide={handleCloseChooseRuleModal} backdrop=\"static\" keyboard={false}>\n            <Modal.Header>\n                <Modal.Title>Choose Rule Form</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n            <Form onSubmit={onSubmit}>\n                    {form}\n                <Button type=\"submit\">Submit</Button>\n            </Form>\n\n        </Modal.Body>\n        </Modal>\n    )\n}\n\nexport default ChooseRuleForm;","import { Button, Form, Modal } from 'react-bootstrap';\nimport { useReducer, useState } from 'react';\nimport { allRulesValid } from \"../../utils/helpers\";\nimport shortid from \"shortid\";\n\nconst formReducer = (state, event) => {\n  if (event.reset) {\n    return {\n      id:'',\n      startingSpikes: 0,\n      rules: '',\n    }\n  }\n  return {\n    ...state,\n    [event.name]: event.value\n  }\n}\n\nconst initialFormState = {id:\"\", rules:\"\", startingSpikes:0}; \n\nconst NewNodeForm = ({ showNewNodeModal, handleCloseModal, handleNewNode, handleError }) => {\n  const handleClose = () => {\n    handleCloseModal();\n  };\n  const [formData, setFormData] = useReducer(formReducer, initialFormState);\n  const [submitting, setSubmitting] = useState(false);\n  const handleChange = event => {\n    setFormData({\n      name: event.target.name,\n      value: event.target.value,\n    });\n  };\n  function handleSubmit(event) {\n    event.preventDefault();\n    let newId = `${formData.id}-${shortid.generate()}`;\n\n    // Add function that changes i and j to rules\n\n    if (allRulesValid(formData.rules)) {\n      console.log(\"All rules valid\");\n      handleClose();\n      setSubmitting(true);\n\n      setTimeout(() => {\n        setSubmitting(false);\n        setFormData({\n          reset: true\n        })\n      }, 3000);\n      const newNeuron = {\n        id: newId,\n        position: { x: 100, y: 100 },\n        rules: formData.rules,\n        startingSpikes: parseInt(formData.startingSpikes),\n        delay: 0,\n        spikes: parseInt(formData.startingSpikes),\n        isOutput: false,\n        out: []\n      }\n      handleNewNode(newNeuron);\n    } else {\n      console.log(\"One or more of the rules is invalid\");\n      handleError(\"One or more of the rules is invalid\");\n      handleClose();\n    };\n  }\n\n  return (\n    <Modal show={showNewNodeModal} onHide={handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>Create New Node</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form onSubmit={handleSubmit} data-testid=\"new-node-form\">\n        <Form.Group>\n            <Form.Label htmlFor=\"node-name\">Node Name</Form.Label>\n            <Form.Control required id=\"node-name\" name=\"id\" type=\"text\" placeholder=\"n0\" value={formData.id} onChange={handleChange} />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label htmlFor=\"node-rules\">Node Rules</Form.Label>\n            <Form.Control id=\"node-rules\" required name=\"rules\" type=\"text\" placeholder=\"a/a->a;0 aa/a->a;1\" value={formData.rules} onChange={handleChange} />\n            <Form.Text className=\"text-muted\">\n              Enter valid rules only. Separate each rule with a space.\n              </Form.Text>\n          </Form.Group>\n          <Form.Group>\n            <Form.Label htmlFor=\"starting-spikes\">Starting Spike Number</Form.Label>\n            <Form.Control id=\"starting-spikes\" required name=\"startingSpikes\" type=\"number\" min=\"0\" value={formData.startingSpikes} onChange={handleChange} />\n          </Form.Group>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n            </Button> {' '}\n          <Button type=\"submit\" variant=\"primary\" data-testid=\"new-node-submit-button\">\n            Save Changes\n            </Button>\n        </Form>\n      </Modal.Body>\n    </Modal>\n  )\n}\nexport default NewNodeForm;","import { Button, Form, Modal } from 'react-bootstrap';\nimport { useReducer, useState } from 'react';\nimport { allRulesValid } from \"../../utils/helpers\";\nimport shortid from \"shortid\";\n\nconst formReducer = (state, event) => {\n  if (event.reset) {\n    return {\n      id:'',\n    }\n  }\n  return {\n    ...state,\n    [event.name]: event.value\n  }\n}\n\nconst initialFormState = {id:\"\"}; \n\nconst NewOutputNodeForm = ({ showNewOutputModal, handleCloseNewOutputModal, handleNewOutput, handleError }) => {\n  const handleClose = () => {\n    handleCloseNewOutputModal();\n  };\n  const [formData, setFormData] = useReducer(formReducer, initialFormState);\n  const [submitting, setSubmitting] = useState(false);\n  const handleChange = event => {\n    console.log(event.target.value);\n    console.log(event.target.name);\n    setFormData({\n      name: event.target.name,\n      value: event.target.value,\n    });\n  };\n  function handleSubmit(event) {\n    event.preventDefault();\n    let newId = `${formData.id}-${shortid.generate()}`;\n      handleClose();\n      setSubmitting(true);\n\n      setTimeout(() => {\n        setSubmitting(false);\n        setFormData({\n          reset: true\n        })\n      }, 3000);\n      const newOutput = {\n        id: newId,\n        position: { x: 300, y: 300 },\n        isOutput: true,\n        spikes: 0,\n        bitstring: ' '\n      }\n      handleNewOutput(newOutput);\n  }\n\n  return (\n    <Modal show={showNewOutputModal} onHide={handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>Create New Node</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form onSubmit={handleSubmit}>\n        <Form.Group>\n            <Form.Label>Output Node Name</Form.Label>\n            <Form.Control  required name=\"id\" type=\"text\" placeholder=\"n0\" value={formData.id} onChange={handleChange} />\n          </Form.Group>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n            </Button> {' '}\n          <Button type=\"submit\" variant=\"primary\">\n            Save Changes\n            </Button>\n        </Form>\n      </Modal.Body>\n    </Modal>\n  )\n}\nexport default NewOutputNodeForm;","import { Button, Form, Modal } from 'react-bootstrap';\nimport { useEffect, useReducer, useState } from 'react';\nimport { allRulesValid } from \"../../utils/helpers\";\n\nconst EditNodeForm = ({ showEditModal, handleCloseEditModal, handleEditNode, handleError, neurons }) => {\n    const [neuronId, setNeuronId] = useState('');\n    const [rules, setRules] = useState('');\n    const [startingSpikes, setStartingSpikes] = useState(0);\n    const handleClose = () => {\n        setNeuronId(null);\n        setRules(null);\n        setStartingSpikes(null);\n        //console.log(neuronId, rules, startingSpikes);\n        handleCloseEditModal();\n    };\n    useEffect(() => {\n        firstUpdate();\n    }, []);\n    function firstUpdate() {\n        var filteredObject = Object.keys(neurons).reduce(function (r, e) {\n            if (!neurons[e].isOutput) r[e] = neurons[e];\n            return r;\n        }, {});\n        //var keys = Object.keys(filteredObject);\n        //setNeuronId(keys[0]);\n        //setRules(filteredObject[keys[0]].rules);\n        //setStartingSpikes(filteredObject[keys[0]].startingSpikes);\n    }\n    var filteredObject = Object.keys(neurons).reduce(function (r, e) {\n        if (!neurons[e].isOutput) r[e] = neurons[e];\n        return r;\n    }, {});\n    let neuronOptions = Object.keys(filteredObject).map((neuron) => (\n        <option value={neuron} key={neuron}>{neuron}</option>)\n    )\n    function handleSelectChange(event) {\n        let id = event.target.value;\n        setNeuronId(id);\n        setRules(neurons[id].rules);\n        setStartingSpikes(neurons[id].startingSpikes);\n    }\n    function handleSubmit(event) {\n        console.log(neuronId, rules, startingSpikes);\n        event.preventDefault();\n        console.log(neuronId, rules, startingSpikes);\n        if (!neuronId || neuronId == '-1') {\n            handleError(\"Please select a node to edit\");\n            return;\n        }\n        else {\n            if (allRulesValid(rules)) {\n                console.log(\"All rules valid\");\n                handleClose();\n                setTimeout(() => {\n                    setNeuronId('');\n                    setRules('');\n                    setStartingSpikes(0);\n                }, 3000);\n                handleEditNode(neuronId, rules, startingSpikes);\n            } else {\n                console.log(\"One or more of the rules is invalid\");\n                handleError(\"One or more of the rules is invalid\");\n            };\n        }\n    }\n\n    return (\n        <Modal show={showEditModal} onHide={handleClose}>\n            <Modal.Header closeButton>\n                <Modal.Title>Edit Node</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form onSubmit={handleSubmit} data-testid=\"edit-node-form\">\n                    <Form.Group>\n                        <Form.Label>Node</Form.Label>\n                        <Form.Control required data-testid=\"select-option\" as=\"select\" defaultValue={-1} onChange={handleSelectChange}>\n                            <option disabled value={-1} key={-1}>Select a node</option>\n                            {neuronOptions}\n                        </Form.Control>\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label htmlFor=\"node-rules\" >Node Rules</Form.Label>\n                        <Form.Control id=\"node-rules\" required name=\"rules\" type=\"text\" placeholder=\"a/a->a;0 aa/a->a;1\" value={rules} onChange={(event) => { setRules(event.target.value) }} />\n                        <Form.Text className=\"text-muted\">\n                            Enter valid rules only. Separate each rule with a space.\n                        </Form.Text>\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label htmlFor=\"startingSpikes\">Starting Spike Number</Form.Label>\n                        <Form.Control id=\"startingSpikes\" required name=\"startingSpikes\" type=\"number\" min=\"0\" placeholder=\"0\" value={startingSpikes} onChange={(event) => setStartingSpikes(event.target.value)} />\n                    </Form.Group>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n            </Button> {' '}\n                    <Button type=\"submit\" variant=\"primary\" data-testid=\"edit-node-submit-button\">\n                        Save Changes\n            </Button>\n                </Form>\n            </Modal.Body>\n        </Modal>\n    )\n}\nexport default EditNodeForm;","import { Button, Form, Modal } from 'react-bootstrap';\nimport { useReducer, useState } from 'react';\nimport { allRulesValid } from \"../../utils/helpers\";\n\nconst DeleteNodeForm = ({ showDeleteModal, handleCloseDeleteModal, handleDeleteNode, handleError, neurons }) => {\n    const [neuronId, setNeuronId] = useState('');\n    const handleClose = () => {\n        handleCloseDeleteModal();\n    };\n    let neuronOptions = Object.keys(neurons).map((neuron)=>(\n        <option value={neuron} key={neuron}>{neuron}</option>)\n    )\n\n    let defaultNeuron = Object.keys(neurons)[0];\n    function handleSelectChange(event){\n        setNeuronId(event.target.value);\n    }\n    function handleSubmit(event) {\n        console.log(\"NeuronId\", neuronId);\n        event.preventDefault();\n        if(neuronId!==''){\n            \n            handleClose();\n                setTimeout(() => {\n                    setNeuronId('');\n                }, 3000);\n                handleDeleteNode(neuronId);\n        }else{\n            handleClose();\n                setTimeout(() => {\n                    setNeuronId('');\n                }, 3000);\n                handleDeleteNode(defaultNeuron);\n        }\n    }\n\n    return (\n        <Modal show={showDeleteModal} onHide={handleClose}>\n            <Modal.Header closeButton>\n                <Modal.Title>Delete Node</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form onSubmit={handleSubmit}>\n                    <Form.Group>\n                        <Form.Label>Select node to delete</Form.Label>\n                        <Form.Control as=\"select\" value={neuronId} onChange={handleSelectChange}>\n                            {neuronOptions}\n                        </Form.Control>\n                    </Form.Group>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n            </Button> {' '}\n                    <Button type=\"submit\" variant=\"danger\">\n                        Delete neuron\n            </Button>\n                </Form>\n            </Modal.Body>\n        </Modal>\n    )\n}\nexport default DeleteNodeForm;","import { Table, Modal } from \"react-bootstrap\"\nimport './ChoiceHistory.css';\nconst ChoiceHistory = ({time,showChoiceHistoryModal,handleCloseHoiceHistoryModal}) =>{\n    var getLatestState = JSON.parse(localStorage.getItem(time-1+\"sec\"));\n    var neuronIds = <td>There are no neurons</td>;\n    if(getLatestState){\n        neuronIds = Object.keys(getLatestState).map((neuron)=>(\n            <th key={neuron}>{neuron}</th>)\n        )\n    }\n    var neuronRows = [];\n    \n    for(var i = 0; i<time; i++){\n        var neuronCells=[];\n        neuronCells.push(TableCell(i));\n        var state = JSON.parse(localStorage.getItem(i+\"sec\"));\n        for(var k in state){\n            if(state[k].chosenRule){\n                neuronCells.push(TableCell(state[k].chosenRule.replace(/->/g, \"→\")));\n            }else{\n                neuronCells.push(TableCell(\"No applicable rule.\"));\n            }\n        }\n        neuronRows.push(TableRow(neuronCells, i));\n        neuronCells = []\n    }\n    return(\n        <Modal show={showChoiceHistoryModal} \n        onHide={handleCloseHoiceHistoryModal} \n        className=\"custom-choice-history-modal\"\n        size=\"lg\">\n                <Table className=\"choicehistory\" striped bordered hover data-testid=\"choice-history-table\">\n                    <thead>\n                        <tr>\n                            <th>Time</th>\n                            {neuronIds}\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {neuronRows}\n                    </tbody>\n                </Table>\n        </Modal>\n    )\n};\n\nconst TableCell = (content) =>{\n    return(\n        <td>\n            {content}\n        </td>\n    )\n};\n\nconst TableRow = (content,i)=>{\n    return (\n        <tr key={\"time-\"+i}>\n            {content}\n        </tr>\n    )\n}\n\nexport default ChoiceHistory;","import { useEffect, useState } from \"react\"\nimport { Prompt } from \"react-router-dom\";\n\nconst useUnsavedChanges = () =>{\n    const [isDirty, setDirty] = useState(false);\n    const message = \"Are you sure you want to exit without saving your system?\"\n    useEffect(()=>{\n        // function handleUnsavedChanges (){\n        //     console.log(\"isDirty:\" + isDirty);\n        // }\n        window.onbeforeunload = isDirty && (() => message);\n\n        //window.addEventListener(\"beforeunload\", handleUnsavedChanges);\n        return () => {\n            //window.removeEventListener(\"beforeunload\", handleUnsavedChanges);\n            window.onbeforeunload = null;\n        }\n    },[isDirty]);\n    const routerPrompt = <Prompt when={isDirty} message={message} />\n    return [routerPrompt, ()=>setDirty(true), ()=>setDirty(false)];\n}\nexport default useUnsavedChanges;","\nimport React, { useReducer, useEffect } from \"react\";\nimport JoyRide, { ACTIONS, EVENTS, STATUS } from \"react-joyride\";\n\n\n// Tour steps\nconst TOUR_STEPS = [\n  {\n    target: \".websnapse-title\",\n    title:\"Welcome to WebSnapse!\",\n    content: \"This is a visual simulator to aid in the creation and simulation of SN P systems.\",\n    placement:'center',\n    disableBeacon: true,\n    disableOverlayClose: true,\n    floaterProps: {\n      disableAnimation: true,\n    }\n  },\n  {\n      target: \"#dropdown-basic\",\n      title: \"Node Actions\",\n      content: \"Here we can find several actions you can do to create your SN P system.\",\n      placement: 'right',\n      offset: 30,\n      disableBeacon: true,\n      disableOverlayClose: true,\n      floaterProps: {\n        disableAnimation: true,\n      }\n  },\n  {\n    target:\"#new-node-btn\",\n    title: \"New Node\",\n    content: \"You can create a new neuron here. You will then be prompted to give it a label name, rules and the number of spikes the neuron should initially contain.\",\n    placement: 'right',\n    disableBeacon: true,\n    disableOverlayClose: true,\n    floaterProps: {\n      disableAnimation: true,\n    }\n  },\n  ///(a+)(\\+*\\**)\\/(a+)->(a+);([0-9]+)/\n  {\n    target:\"#new-node-btn\",\n    title:\"Creating Rules\",\n    content:\"When writing rules, it should follow the format E/c->p;d, where E follows the regular expression (a+)(\\+*\\**), c is (a+) with length equal to the number of spikes consumed, p is (a+) with length equal to the number of spikes produced and d equal to the delay.\",\n    placement:'right',\n    disableBeacon: true,\n    disableOverlayClose: true,\n    floaterProps: {\n      disableAnimation: true,\n    }\n  },\n  {\n    target:\"#new-output-btn\",\n    title: \"New Output Node\",\n    content: \"You can also create output neurons to receive the output of your system in the form of a bitstring, with the bits representing whether the output neuron  receives a spike or not at the given time.\",\n    placement:'right',\n    disableBeacon: true,\n    disableOverlayClose: true,\n    floaterProps: {\n      disableAnimation: true,\n    }\n  }, \n  {\n    target:\"#edit-node-btn\",\n    title: \"Edit Node\",\n    content:\"You can edit a neuron by choosing the neuron ID of the neuron you would like to edit. The neurons are ordered from oldest to last added. You can edit the rules and spikes of the neuron. You can choose to cancel or save the changes you made, which will be seen right after.\",\n    placement:'right',\n    disableBeacon: true,\n    disableOverlayClose: true,\n    floaterProps: {\n      disableAnimation: true,\n    }\n  },\n  {\n    target:\"#del-node-btn\",\n    title: \"Delete Node\",\n    content:\"You can delete a neuron by choosing the neuron ID of the neuron you would like to delete. The neurons are ordered from oldest to last added. Deleting a neuron will also delete the synapses connected to the neuron. You can choose to cancel or save the changes you made, which will be seen right after.\",\n    placement:'right',\n    disableBeacon: true,\n    disableOverlayClose: true,\n    floaterProps: {\n      disableAnimation: true,\n    }\n  },\n  {\n    target:\".__________cytoscape_container\",\n    title: \"The Workspace\",\n    content:\"After adding a neuron, you will be able to see a visual representation here.  Inside each neuron, you will find the number of spikes the neuron has at the top, and its rules at the center. Below the neuron, you will find the current delay timer before the neuron spikes. By default, this is set to 0 and a neuron is set to spike at -1. \",\n    placement:'bottom-start',\n    offset:-400,\n    disableBeacon: true,\n    disableOverlayClose: true,\n    floaterProps: {\n      disableAnimation: true,\n    }\n  },\n  {\n    target:\".__________cytoscape_container\",\n    title:\"Creating Edges\",\n    content:\"To create synapses or edges,  hover over the source node or neuron then a grey circle will appear and you can drag that to see a directed arrow that you can connect to your desired next node or neuron. \",\n    placement:'bottom-start',\n    offset:-400,\n    disableBeacon: true,\n    disableOverlayClose: true,\n    floaterProps: {\n      disableAnimation: true,\n    }\n\n  },\n  {\n    target:\".snapse-controls\",\n    title:\"Starting the Simulation\",\n    content:\"Now it's time for simulations! You can simulate the system one step at a time by using the forward button. You can use the backward button to revert the system to the previous timestep.\",\n    placement:'bottom',\n    disableBeacon: true,\n    disableOverlayClose: true,\n    floaterProps: {\n      disableAnimation: true,\n    }\n  },\n  {\n    target:\".snapse-controls\",\n    title:\"Starting the Simulation\",\n    content:\"You can also simulate the system continuously by clicking the play button. It will then proceed to go step-by-step at 3 second intervals until the simulation is paused or the system halts.\",\n    placement:'bottom',\n    disableBeacon: true,\n    disableOverlayClose: true,\n    floaterProps: {\n      disableAnimation: true,\n    }\n  },\n  {\n    target:\"#formGridCheckbox\",\n    title:\"Pseudorandom or Guided Mode\",\n    content:\"If your system contains points of non-determinism, or rather, if a neuron can execute more than one rule at a time, you can choose to set the simulation to pseudorandom or guided mode. When using guided mode, you will be prompted to choose which rule the neuron should follow for that timestep. \",\n    placement:'bottom',\n    disableBeacon: true,\n    disableOverlayClose: true,\n    floaterProps: {\n      disableAnimation: true,\n    }\n  }, \n  {\n    target:\"#react-burger-menu-btn\",\n    title:\"Menu Actions\",\n    content:\"In this menu, you will find other actions such as saving/loading files, viewing the choice history and some sample systems.\",\n    placement:'right',\n    offset: 390,\n    disableBeacon: true,\n    disableOverlayClose: true,\n    floaterProps: {\n      disableAnimation: true,\n    }\n  },\n  {\n    target:\"#custom-file\",\n    title: \"Loading Files\",\n    content:\"You can open pre-made or saved SNP Systems files in XML format.\",\n    offset: 45,\n    placement:'right',\n    disableBeacon: true,\n    disableOverlayClose: true,\n    floaterProps: {\n      disableAnimation: true,\n    }\n  }, \n  {\n    target:\"#save-btn\",\n    title: \"Saving Systems\",\n    content:\"You can also save the current system you are working on. It will create an XML file.\",\n    offset: 160,\n    placement:'right',\n    disableBeacon: true,\n    disableOverlayClose: true,\n    floaterProps: {\n      disableAnimation: true,\n    }\n  },\n  {\n    target:\"#choice-history-btn\",\n    title:\"Choice History\",\n    content:\"Here you can view a table containing the rules each neuron applied per timestep.\",\n    offset: 90,\n    placement: 'right',\n    disableBeacon: true,\n    disableOverlayClose: true,\n    floaterProps: {\n      disableAnimation: true,\n    }\n  },\n  {\n    target:\"#file-dropdown\",\n    title:\"Download Samples\",\n    content:\"Lastly, you can download some of the sample SN P systems prepared here to start you off!\",\n    offset: 65,\n    placement:'right',\n    disableBeacon: true,\n    disableOverlayClose: true,\n    floaterProps: {\n      disableAnimation: true,\n    }\n  },\n  {\n    target: \".websnapse-title\",\n    title:\"Get Started\",\n    content:\"And that's the end of the tutorial! Enjoy creating and simulating your own SN P systems!\",\n    placement:'center',\n    disableBeacon: true,\n    disableBeacon:true,\n    floaterProps: {\n      disableAnimation: true,\n    }\n  }\n];\n\n// Initial state for the tour component\nconst INITIAL_STATE = {\n  key: new Date(), // This field makes the tour to re-render when we restart the tour\n  run: false,\n  continuous: true, // Show next button\n  loading: false,\n  stepIndex: 0, // Make the component controlled\n  steps: TOUR_STEPS\n};\n\n\n// Reducer will manage updating the local state\nconst reducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    // start the tour\n    case \"START\":\n      return { ...state, run: true };\n    // Reset to 0th step\n    case \"RESET\":\n      return { ...state, stepIndex: 0 };\n    // Stop the tour\n    case \"STOP\":\n      return { ...state, run: false };\n    // Update the steps for next / back button click\n    case \"NEXT_OR_PREV\":\n      return { ...state, ...action.payload };\n    // Restart the tour - reset go to 1st step, restart create new tour\n    case \"RESTART\":\n      return {\n        ...state,\n        stepIndex: 0,\n        run: true,\n        loading: false,\n        key: new Date()\n      };\n    default:\n      return state;\n  } \n};\n// styles\n\nconst styles ={\n  beaconInner: {\n    backgroundColor: '#786fa6'\n  },\n  tooltip:{\n    backgroundColor: '#fff',\n    textColor: '#333',\n    fontSize: 14\n  },\n  tooltipContainer: {\n    textAlign: \"center\"\n  },\n  tooltipTitle: {\n    fontSize: 17,\n    margin: '0 0 0 0'\n  },\n  buttonNext: {\n    backgroundColor: '#786fa6'\n  },\n  buttonBack: {\n    color: '#786fa6'\n  },\n  buttonSkip:{\n    color:'#786fa6'\n  },\n  overlay:{\n    backgroundColor: 'rgba(0,0,0, 0.7)',\n    mixBlendMode: 'multiply'\n  },\n  spotlightLegacy:{\n    boxShadow: `0 0 10 5 rgba(0,0,0, 0.5), 0 0 15px rgba(0, 0, 0, 0.3)`\n  },\n  floater: {\n    arrow: {\n      color: '#fff',\n    },\n    tooltip: {\n      zIndex: 100,\n    },\n  }\n}\n\n// Tour component\nconst Tour = ({handleShowDropdownBasic, handleCloseDropdownBasic, handleShowSideBarMenu, handleCloseSideBarMenu, restartTutorial, handleFalseRestartTutorial}) => {\n  // Tour state is the state which control the JoyRide component\n  const [tourState, dispatch] = useReducer(reducer, INITIAL_STATE);\n\n  useEffect(() => {\n    // Auto start the tour if the tour is not viewed before\n    if (!localStorage.getItem(\"tour\")) {\n      dispatch({ type: \"START\" });\n    }\n  }, []);\n\n  // Set once tour is viewed, skipped or closed\n  const setTourViewed = () => {\n    localStorage.setItem(\"tour\", \"1\");\n  };\n\n  const callback = data => {\n    const { action, index, type, status } = data;\n\n    if (\n      // If close button clicked, then close the tour\n      action === ACTIONS.CLOSE ||\n      // If skipped or end tour, then close the tour\n      (status === STATUS.SKIPPED && tourState.run) ||\n      status === STATUS.FINISHED\n    ) {\n      dispatch({ type: \"STOP\" });\n    } else if (type === EVENTS.STEP_AFTER || type === EVENTS.TARGET_NOT_FOUND) {\n      // Check whether next or back button click and update the step.\n      dispatch({\n        type: \"NEXT_OR_PREV\",\n        payload: { stepIndex: index + (action === ACTIONS.PREV ? -1 : 1) }\n      });\n    } else if (index === 0){\n      handleCloseSideBarMenu();\n    }else if (index === 1) {\n      handleShowDropdownBasic();\n      handleFalseRestartTutorial();\n    } else if (index === 1 && action === ACTIONS.PREV){\n      handleCloseDropdownBasic();\n    } else if (index === 7){\n      handleCloseDropdownBasic();\n    } else if (index === 12){\n      handleShowSideBarMenu();\n    } else if (index === 17){\n      handleCloseSideBarMenu();\n      //setTourViewed();\n    }\n  };\n\n  const startTour = () => {\n    // Start the tour manually\n    dispatch({ type: \"RESTART\" });\n  };\n\n  useEffect(() => {\n    if(restartTutorial == true){\n      startTour();\n    }\n  }, [restartTutorial]);\n\n  return (\n    <>\n      <JoyRide \n      {...tourState}\n      // Callback will pass all the actions\n      callback={callback}\n      scrollToFirstStep={true}\n      showSkipButton={true} \n      hideBackButton={false} \n      showProgress={true}\n      continuous={true}\n      styles={styles}\n      locale={{\n        last: \"End tour\",\n        skip: \"Skip tour\"\n      }} />\n    </>\n  );\n};\n\nexport default Tour;","import './scss/custom.scss';\nimport './App.css';\nimport { slide as Menu } from 'react-burger-menu'\nimport { useState, useEffect, useRef } from \"react\";\nimport { useImmer } from \"use-immer\";\nimport { Button, Container, Alert, Row, Col, Form, OverlayTrigger, Tooltip, Dropdown, DropdownButton } from 'react-bootstrap';\nimport { PlayFill, PauseFill, SkipForwardFill, SkipBackwardFill, QuestionCircle, ClockFill, ClockHistory, PlusSquare, Save2 } from 'react-bootstrap-icons';\nimport styled, { css, keyframes } from 'styled-components'\nimport Snapse from \"./components/Snapse/Snapse\";\nimport shortid from 'shortid';\nimport { step, backStep, parseRule } from \"./utils/automata\";\nimport ChooseRuleForm from './components/forms/ChooseRuleForm';\nimport NewNodeForm from './components/forms/NewNodeForm';\nimport NewOutputNodeForm from './components/forms/NewOutputNodeForm';\nimport EditNodeForm from './components/forms/EditNodeForm';\nimport DeleteNodeForm from './components/forms/DeleteNodeForm';\nimport ChoiceHistory from './components/ChoiceHistory/ChoiceHistory';\nimport convert from 'xml-js';\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { saveAs } from 'file-saver';\nimport useUnsavedChanges from './components/useUnsavedChanges/useUnsavedChanges';\nimport { original } from 'immer';\nimport Tour from './components/Tour/Tour';\nvar options = { compact: true, ignoreComment: true, spaces: 4, sanitize: false };\n\nfunction useKey(key, cb) {\n  const isFocus = useRef(false);\n  const callbackRef = useRef(cb);\n\n  const inputs = document.getElementsByTagName('input');\n\n  // if user is typing in input elements, isFocus = true, and keybinds should not work\n  useEffect(() => {\n    for (let input of inputs) {\n      input.addEventListener('focusin', () => { isFocus.current = true; console.log(\"fOCUS ON ME\"); });\n      input.addEventListener('input', () => { isFocus.current = true; console.log(\"fOCUS ON ME 2\"); });\n      input.addEventListener('focus', () => { isFocus.current = true; console.log(\"fOCUS ON ME 3\"); }, true);\n      input.addEventListener('focusout', () => { isFocus.current = false });\n    }\n  })\n\n  useEffect(() => {\n    callbackRef.current = cb;\n  });\n  useEffect(() => {\n    function debounced(delay, fn) {\n      let timerId;\n      return function (...args) {\n        if (timerId) {\n          clearTimeout(timerId);\n        }\n        timerId = setTimeout(() => {\n          fn(...args);\n          timerId = null;\n        }, delay);\n      }\n    }\n\n    function handleKeyDown(event) {\n      console.log(`isFocus ${isFocus.current}`);\n      if (event.code === key && isFocus.current == false) {\n        console.log(`handleKeyDown isFocus: ${isFocus.current}`)\n        //event.preventDefault();\n        console.log(\"Key pressed: \" + event.code);\n        callbackRef.current(event);\n      }\n    }\n\n    document.addEventListener(\"keydown\", (event) => { if (event.code === \"Space\" && isFocus == false) { event.preventDefault(); } });\n    document.addEventListener(\"keydown\", (debounced(300, handleKeyDown)));\n    return () => document.removeEventListener(\"keydown\", handleKeyDown);\n  }, [key]);\n}\n\nfunction App() {\n  const [neurons, setNeurons] = useImmer((window.localStorage.getItem('originalNeurons') != null) ? JSON.parse(window.localStorage.getItem('originalNeurons')) : {\n    n1: {\n      id: \"n1\",\n      position: { x: 50, y: 50 },\n      rules: 'a+/a->a;2',\n      startingSpikes: 1,\n      delay: 0,\n      spikes: 1,\n      isOutput: false,\n      out: ['n2']\n    },\n    n2: {\n      id: \"n2\",\n      position: { x: 200, y: 50 },\n      rules: 'a/a->a;1',\n      startingSpikes: 0,\n      delay: 0,\n      spikes: 0,\n      isOutput: false,\n      out: ['n3']\n    },\n    n3: {\n      id: \"n3\",\n      position: { x: 400, y: 50 },\n      rules: 'a/a->a;0',\n      startingSpikes: 1,\n      delay: 0,\n      spikes: 1,\n      isOutput: false,\n      out: [\"n4\"]\n    },\n    n4: {\n      id: \"n4\",\n      position: { x: 400, y: 200 },\n      isOutput: true,\n      spikes: 0,\n      bitstring: ' '\n    }\n  });\n  const [time, setTime] = useState(0);\n  const [isRandom, setIsRandom] = useState(true);\n  const [fileName, setFileName] = useState('');\n  const [Prompt, setDirty, setPristine] = useUnsavedChanges();\n  // Modal Booleans\n  const [showNewNodeModal, setShowNewNodeModal] = useState(false);\n  const [showNewOutputModal, setShowNewOutputModal] = useState(false);\n  const [showChooseRuleModal, setShowChooseRuleModal] = useState(false);\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [showChoiceHistoryModal, setShowChoiceHistoryModal] = useState(false);\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  // Menu Booleans \n  const [showDropdownBasic, setShowDropdownBasic] = useState(false);\n  const [showSideBarMenu, setShowSideBarMenu] = useState(false);\n  // Simulation Booleans\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [hasEnded, setHasEnded] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [pBar, setPBar] = useState(0);\n  const headless = process.env.NODE_ENV === 'test'\n  const handleClose = () => setShowNewNodeModal(false)\n  const handleShow = () => setShowNewNodeModal(true)\n  const handleCloseNewOutputModal = () => setShowNewOutputModal(false);\n  const handleShowNewOutputModal = () => setShowNewOutputModal(true);\n  const handleCloseEditModal = () => setShowEditModal(false);\n  const handleShowEditModal = () => setShowEditModal(true);\n  const handleCloseDeleteModal = () => setShowDeleteModal(false);\n  const handleShowDeleteModal = () => setShowDeleteModal(true);\n  const handleCloseChooseRuleModal = () => setShowChooseRuleModal(false);\n  // Menu Handles\n  const handleShowDropdownBasic = () => setShowDropdownBasic(true);\n  const handleCloseDropdownBasic = () => setShowDropdownBasic(false);\n  const handleDropDownBasic = () => {setShowDropdownBasic(showDropdownBasic ? false:true)};\n  const handleShowSideBarMenu = () => setShowSideBarMenu(true);\n  const handleCloseSideBarMenu = () => setShowSideBarMenu(false);\n  const handleSideBarMenu = () => {setShowSideBarMenu(showSideBarMenu ? false:true)};\n\n  const [restartTutorial, setRestartTutorial] = useState(false);\n  const handleTrueRestartTutorial = () => setRestartTutorial(true);\n  const handleFalseRestartTutorial = () => setRestartTutorial(false);\n\n  const handleShowChoiceHistoryModal = () => {setShowChoiceHistoryModal(true); setShowSideBarMenu(false);}\n  const handleCloseHoiceHistoryModal = () => setShowChoiceHistoryModal(false);\n\n  const handleSimulationEnd = () => {\n    setHasEnded(true);\n    setIsPlaying(false);\n    console.log(\"alert from simulationEnd\");\n    alert(\"Simulation has ended.\");\n  }\n\n  const showError = (text) => {\n    setError(text);\n    setTimeout(() => {\n      setError(\"\");\n    }, 3000);\n  }\n  const handleSave = () => {\n    //Convert JSON Array to string.\n    var wrapper = { content: neurons };\n    //console.log(neurons);\n    var result = convert.json2xml(wrapper, options);\n    //console.log(wrapper);\n    var blob = new Blob([result], { type: \"text/xml;charset=utf-8\", });\n    saveAs(blob, Date().toString() + \"-Neurons.xmp\");\n    setPristine();\n  }\n  const handleLoad = (input) => {\n    let file = input.files[0];\n    setHasEnded(false);\n\n    if (file.type && file.type.indexOf('text/xml') === -1) {\n\n      showError(\"File is not a xml file\");\n      return;\n    }\n    const reader = new FileReader();\n    function nativeType(value) {\n      var nValue = Number(value);\n      if (!isNaN(nValue)) {\n        return nValue;\n      }\n      var bValue = value.toLowerCase();\n      if (bValue === 'true') {\n        return true;\n      } else if (bValue === 'false') {\n        return false;\n      }\n      return value;\n    }\n    var removeJsonTextAttribute = async function (value, parentElement) {\n      try {\n        const pOpKeys = Object.keys(parentElement._parent);\n        const keyNo = pOpKeys.length;\n        const keyName = pOpKeys[keyNo - 1];\n        const arrOfKey = parentElement._parent[keyName];\n        const arrOfKeyLen = arrOfKey.length;\n        if (arrOfKeyLen > 0) {\n          const arr = arrOfKey;\n          const arrIndex = arrOfKey.length - 1;\n          arr[arrIndex] = value;\n        } else if (keyName == \"out\") {\n          parentElement._parent[keyName] = [value];\n        } else if (keyName == \"bitstring\") {\n          console.log(\"bitstring\");\n          parentElement._parent[keyName] = \"\";\n        }\n        else {\n          parentElement._parent[keyName] = nativeType(value);\n        }\n\n      } catch (e) { }\n    }\n    reader.addEventListener('load', async (event) => {\n      var options = {\n        compact: true,\n        trim: true,\n        ignoreDeclaration: true,\n        ignoreInstruction: true,\n        ignoreAttributes: true,\n        ignoreComment: true,\n        ignoreCdata: true,\n        ignoreDoctype: true,\n        textFn: removeJsonTextAttribute\n      };\n      var result = await convert.xml2js(event.target.result, options);\n      await setNeurons(draft => draft = result.content);\n      await setNeurons(draft => {\n        for (var k in draft) {\n          if (draft[k].bitstring) {\n            console.log(draft[k].bitstring);\n            draft[k].bitstring = \" \";\n          }\n          if(!draft[k].isOutput && !draft[k].out){\n            draft[k].out = [];\n          }\n        }\n      })\n      window.localStorage.setItem('originalNeurons', JSON.stringify(result.content));\n      setFileName(file.name);\n    });\n    reader.readAsText(file);\n    setTime(0);\n  }\n\n  const onEdgeCreate = async (src, dst) => {\n    console.log(\"newEdge\", src, dst);\n    await setNeurons(draft => {\n      var outCopy = [...draft[src].out];\n      outCopy.push(dst)\n      draft[src].out = outCopy;\n    })\n  }\n  const handleNewPosition = async (position, id) => {\n    setNeurons(draft => {\n      draft[id].position = position;\n    });\n    setDirty(true);\n\n  }\n  async function handleNewNode(newNeuron) {\n    await setNeurons(draft => {\n      draft[newNeuron.id] = newNeuron;\n    })\n    setDirty(true);\n    window.localStorage.setItem('originalNeurons', JSON.stringify(JSON.parse(JSON.stringify(neurons))));\n\n  }\n  async function handleNewOutput(newOutput) {\n    await setNeurons(draft => {\n      draft[newOutput.id] = newOutput;\n    });\n    setDirty(true);\n    window.localStorage.setItem('originalNeurons', JSON.stringify(JSON.parse(JSON.stringify(neurons))));\n  }\n  async function handleEditNode(id, rules, spikes) {\n    //console.log(\"handleEditNode\")\n    await setNeurons(draft => {\n      draft[id].startingSpikes = spikes;\n      draft[id].spikes = spikes;\n      draft[id].rules = rules;\n    });\n    setDirty(true);\n    window.localStorage.setItem('originalNeurons', JSON.stringify(JSON.parse(JSON.stringify(neurons))));\n  }\n  async function handleDeleteNode(neuronId) {\n    console.log(\"handleDeleteNode\", neuronId);\n    await setNeurons(draft => {\n      \n      for (var k in draft) {\n        //first delete edges connected to neuron\n        var neuron = draft[k];\n        if (!neuron.isOutput && neuron.out) {\n          //const neuronOutKeys = neuron.out;\n          let arr = neuron.out.filter(function (item) {\n            return item !== neuronId\n          });\n          draft[k].out = arr;\n        }\n      }\n      //delete neuron\n      delete draft[neuronId];\n    })\n    setDirty(true);\n    window.localStorage.setItem('originalNeurons', JSON.stringify(JSON.parse(JSON.stringify(neurons))));\n  }\n  function handlePlay() {\n    if (!hasEnded) {\n      console.log(`isPlaying before ${isPlaying}`);\n      setIsPlaying(p => !p);\n      console.log(`isPlaying after ${isPlaying}`);\n    } else {\n      alert(\"Simulation has ended.\");\n    }\n  }\n  const renderTooltip = (props) => (\n    <Tooltip id=\"button-tooltip\" {...props}>\n      Pseudorandom will allow the system to decide which rule will be executed. Unchecking it will let you decide.\n    </Tooltip>\n  );\n  const handleReset = () => {\n    if(time != 0){\n      setNeurons(draft => draft = JSON.parse(window.localStorage.getItem('originalNeurons')));\n      setTime(0);\n      setIsPlaying(false);\n      setHasEnded(false);\n      var tempNeurons = window.localStorage.getItem('originalNeurons');\n      window.localStorage.clear();\n      window.localStorage.setItem('originalNeurons', tempNeurons);\n    }\n  }\n\n  const [guidedRules, setGuidedRules] = useState({});\n  const handleStartGuidedMode = async (rules) => {\n    await setGuidedRules(rules);\n    setShowChooseRuleModal(true);\n    if (setShowChooseRuleModal) {\n      setIsPlaying(false); //pauses the graph playing while choosing rule\n    }\n  }\n  const handleChosenRules = (data) => {\n    handleCloseChooseRuleModal();\n    setNeurons((draft) => {\n      for (var j in draft) {\n        for (var k in data) {\n          if (j == k) {\n            var [requires, grouped, symbol, consumes, produces, delay] = parseRule(data[k]);\n            draft[j].delay = delay\n            //console.log(data[k]);\n            draft[j].currentRule = data[k];\n            draft[j].chosenRule = data[k];\n          }\n        }\n      }\n    });\n    setIsPlaying(true); // continue playing after choosing rule\n  }\n  const onForward = async () => {\n    if (time == 0) {\n      //copy\n      console.log(\"Time is: \" + time);\n      window.localStorage.setItem('originalNeurons', JSON.stringify(JSON.parse(JSON.stringify(neurons))));\n      console.log(\"Original neurons on time = 1 \", window.localStorage.getItem('originalNeurons'));\n    }\n    if (!hasEnded) {\n      await setNeurons(neurons => step(neurons, time, isRandom, handleStartGuidedMode, handleSimulationEnd));\n      setTime(time => time + 1);\n      console.log(neurons);\n    } else {\n      alert(\"Simulation has ended.\");\n    }\n  }\n  const onBackward = async () => {\n    if (time > 1) {\n      var tempTime = time.valueOf();\n      setHasEnded(false);\n      await setNeurons(neurons => backStep(tempTime - 2));\n      await setTime(time => time - 1);\n\n    }\n    else if (time == 1) {\n      handleReset();\n    }\n\n  }\n  const neuronsRef = useRef(neurons)\n  neuronsRef.current = neurons\n  const onIntervalStepRef = useRef(onForward)\n  onIntervalStepRef.current = () => {\n    onForward();\n    setPBar(p => p + 1);\n  }\n  useEffect(() => {\n    if (isPlaying) {\n      var interval = setInterval(() => {\n        onIntervalStepRef.current()\n      }, 3000)\n    }\n    return () => clearInterval(interval);\n  }, [isPlaying, onIntervalStepRef])\n\n  useEffect(() => {\n    if (showChooseRuleModal) {\n      console.log(\"showChooseRuleModal is true\");\n    }\n  }, [])\n\n  // Key Bindings \n  function handleSpace() {\n    console.log(\"Space Pressed\");\n    setIsPlaying(p => !p);\n  }\n\n  function handleRightKey() {\n    console.log(\"Right Key Pressed\");\n    if (!hasEnded) {\n      onIntervalStepRef.current();\n    }\n  }\n\n  function handleLeftKey() {\n    console.log(\"Left Key Pressed\");\n    onBackward();\n  }\n\n  useKey(\"Space\", handleSpace);\n  useKey(\"ArrowLeft\", handleLeftKey);\n  useKey(\"ArrowRight\", handleRightKey);\n\n \n\n\n  return (\n    <Router>\n      <Tour handleShowDropdownBasic={handleShowDropdownBasic} handleCloseDropdownBasic={handleCloseDropdownBasic} handleShowSideBarMenu={handleShowSideBarMenu} handleCloseSideBarMenu={handleCloseSideBarMenu} restartTutorial={restartTutorial} handleFalseRestartTutorial={handleFalseRestartTutorial}/> \n      <Switch>\n        <Route path=\"/\">\n          <Container>\n            {error && <Alert variant=\"danger\">\n              {error}\n            </Alert>}\n            <Menu id=\"side-bar-menu\" isOpen={showSideBarMenu} onClick={handleSideBarMenu} disableCloseOnEsc disableOverlayClick noOverlay>\n\n              <Form>\n                <Form.File\n                  id=\"custom-file\"\n                  label={fileName ? fileName : \"Load file...\"}\n                  custom\n                  onChange={(e) => { handleLoad(e.target) }}\n                />\n              </Form>\n              <div>\n                <Button id=\"save-btn\" variant=\"primary\" disabled={time > 0 ? true : false} onClick={handleSave}><Save2 />{' '}Save</Button>\n              </div>\n              <div>\n                <Button id=\"choice-history-btn\" variant=\"primary\" onClick={handleShowChoiceHistoryModal}><ClockHistory />{' '}Choice History</Button>\n              </div>\n              <div>\n                <DropdownButton id=\"file-dropdown\" title=\"Download samples\">\n                  <Dropdown.Item href=\"./samples/3k+3 spiker.xmp\" download>3k+3 Spiker</Dropdown.Item>\n                  <Dropdown.Item href=\"./samples/bitadder.xmp\" download>Bitadder</Dropdown.Item>\n                  <Dropdown.Item href=\"./samples/increasing comparator.xmp\" download>Increasing Comparator</Dropdown.Item>\n                  <Dropdown.Item href=\"./samples/naturally even.xmp\" download>Naturally Even</Dropdown.Item>\n                  <Dropdown.Item href=\"./samples/naturally greater one.xmp\" download>Naturally Greater One</Dropdown.Item>\n                </DropdownButton>\n              </div>\n              <div>\n                <Button id=\"restart-tour\" variant=\"primary\" onClick={handleTrueRestartTutorial}>Restart Tutorial</Button>\n              </div>\n            </Menu>\n            <div>\n              <div style={{ textAlign: \"center\" }}>\n                <h1 style={{ fontWeight: \"700\" }} className=\"websnapse-title\">WebSnapse</h1>\n              </div>\n              <Row>\n                <Col>\n                  <div>\n\n                    <Form>\n                      <Form.Group id=\"formGridCheckbox\">\n                        <Row>\n                          <Col sm={6}>\n                            <Form.Check type=\"checkbox\"\n                              label=\"Pseudorandom\"\n                              defaultChecked={isRandom}\n                              onChange={() => {\n                                setIsRandom(!isRandom)\n                              }} />\n                          </Col>\n\n                          <Col sm={1} style={{ textAlign: \"left\" }}>\n                            <OverlayTrigger\n                              placement=\"right\"\n                              delay={{ show: 250, hide: 400 }}\n                              overlay={renderTooltip}\n                            >\n                              <QuestionCircle />\n                            </OverlayTrigger>\n                          </Col>\n                        </Row>\n                      </Form.Group>\n                    </Form>\n                    {time == 0 ? <div></div> :\n                      <div style={{ backgroundColor: \"#778beb\", color: \"white\", borderRadius: \"10px\", padding: \"0.5em\" }}>\n                        <ClockFill color=\"white\" size={30} /> <strong>Time:</strong> {time == 0 ? \"Start playing!\" : time}\n                      </div>\n                    }\n\n                  </div>\n                </Col>\n                <Col>\n                  <div className=\"snapse-controls\" style={{ textAlign: \"center\", marginBottom: \"0.8em\" }}>\n                    <Button variant=\"link\" onClick={onBackward}><SkipBackwardFill /></Button>{' '}\n                    <div style={{ display: 'inline-block' }}>\n                      <ProgressBar key={pBar} isPlaying={isPlaying} />\n                      <Button size=\"lg\" className=\"snapse-controls-play\" onClick={handlePlay}>{isPlaying ? <PauseFill /> : <PlayFill />}</Button>\n                    </div> {' '}\n                    <Button variant=\"link\" onClick={() => onForward()}><SkipForwardFill /></Button>{' '}\n\n                  </div>\n                  <div style={{ textAlign: \"center\" }}>\n                    <Dropdown show={showDropdownBasic} onClick={handleDropDownBasic}>\n                      <Dropdown.Toggle id=\"dropdown-basic\">\n                        <PlusSquare />{' '}Node Actions\n                    </Dropdown.Toggle>\n                      <Dropdown.Menu>\n                        <Dropdown.Item id=\"new-node-btn\"><Button variant=\"link\" size=\"sm\" className=\"node-actions text-primary\" onClick={handleShow} disabled={time > 0 ? true : false}>New Node</Button></Dropdown.Item>\n                        <Dropdown.Item id=\"new-output-btn\"><Button variant=\"link\" size=\"sm\" className=\"node-actions text-primary\" onClick={handleShowNewOutputModal} disabled={time > 0 ? true : false}>New Output Node</Button></Dropdown.Item>\n                        <Dropdown.Item id=\"edit-node-btn\"><Button variant=\"link\" size=\"sm\" className=\"node-actions text-info\" onClick={handleShowEditModal} disabled={time > 0 ? true : false}>Edit</Button></Dropdown.Item>\n                        <Dropdown.Item id=\"del-node-btn\"><Button variant=\"link\" size=\"sm\" className=\"node-actions text-danger\" onClick={handleShowDeleteModal} disabled={time > 0 ? true : false}>Delete</Button></Dropdown.Item>\n                      </Dropdown.Menu>\n                    </Dropdown>\n                  </div>\n                </Col>\n                <Col style={{ textAlign: \"right\" }}><Button variant=\"danger\" onClick={handleReset}>Restart</Button>{' '}</Col>\n              </Row>\n            </div>\n            <hr />\n            <Snapse\n              neurons={neurons}\n              onEdgeCreate={(src, dst, addedEles) => {\n                onEdgeCreate(src.id(), dst.id())\n                addedEles.remove();\n              }}\n              handleChangePosition={handleNewPosition}\n              headless={headless} />\n            <ChoiceHistory time={time}\n              showChoiceHistoryModal={showChoiceHistoryModal}\n              handleCloseHoiceHistoryModal={handleCloseHoiceHistoryModal}/>\n            <NewNodeForm showNewNodeModal={showNewNodeModal}\n              handleCloseModal={handleClose}\n              handleNewNode={handleNewNode}\n              handleError={showError} />\n            <NewOutputNodeForm showNewOutputModal={showNewOutputModal}\n              handleCloseNewOutputModal={handleCloseNewOutputModal}\n              handleNewOutput={handleNewOutput}\n              handleError={showError} />\n            <EditNodeForm showEditModal={showEditModal}\n              handleCloseEditModal={handleCloseEditModal}\n              handleEditNode={handleEditNode}\n              handleError={showError}\n              neurons={neurons} />\n            <DeleteNodeForm showDeleteModal={showDeleteModal}\n              handleCloseDeleteModal={handleCloseDeleteModal}\n              handleDeleteNode={handleDeleteNode}\n              handleError={showError}\n              neurons={neurons}\n            />\n            <ChooseRuleForm showChooseRuleModal={showChooseRuleModal}\n              handleCloseChooseRuleModal={handleCloseChooseRuleModal}\n              rules={guidedRules}\n              handleChosenRules={handleChosenRules}\n            />\n            {Prompt}\n          </Container>\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nconst shortening = keyframes`\n  from {\n    transform: scaleX(100%);\n  }\n\n  to {\n    transform: scaleX(0%);\n  }\n`\nconst ProgressBar = styled.div`\n  ${props =>\n    props.isPlaying &&\n    css`\n      animation: ${shortening} 3s linear; \n    `}\n  background-color: #c44569;\n  height: 4px;\n  transform-origin: left center;\n  margin-bottom: 2px;\n`\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport cytoscape from 'cytoscape';\nimport edgehandles from 'cytoscape-edgehandles';\nimport gridGuide from 'cytoscape-grid-guide';\n\ncytoscape.use(edgehandles)\ncytoscape.use(gridGuide)\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}